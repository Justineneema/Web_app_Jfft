# Generated by Django 4.2.7 on 2025-09-26 22:48

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('late', 'Late')], default='not_started', max_length=20)),
                ('best_wpm', models.FloatField(default=0.0)),
                ('best_accuracy', models.FloatField(default=0.0)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('time_spent', models.DurationField(default=datetime.timedelta(0))),
                ('grade', models.FloatField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Assignment Submission',
                'verbose_name_plural': 'Assignment Submissions',
                'db_table': 'assignment_submissions',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('school_type', models.CharField(choices=[('elementary', 'Elementary School'), ('middle', 'Middle School'), ('high', 'High School'), ('college', 'College/University'), ('vocational', 'Vocational School'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
                ('address_line1', models.CharField(max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('student_count', models.PositiveIntegerField(default=0)),
                ('teacher_count', models.PositiveIntegerField(default=0)),
                ('established_year', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subscription_plan', models.CharField(default='basic', max_length=50)),
                ('subscription_expires', models.DateTimeField(blank=True, null=True)),
                ('max_students', models.PositiveIntegerField(default=100)),
                ('max_teachers', models.PositiveIntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
                'db_table': 'schools',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('assignment_type', models.CharField(choices=[('lesson', 'Lesson'), ('practice', 'Practice'), ('test', 'Test'), ('challenge', 'Challenge')], max_length=20)),
                ('target_wpm', models.PositiveIntegerField(blank=True, null=True)),
                ('target_accuracy', models.PositiveIntegerField(blank=True, null=True)),
                ('time_limit_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'School Assignment',
                'verbose_name_plural': 'School Assignments',
                'db_table': 'school_assignments',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('grade_level', models.CharField(choices=[('K', 'Kindergarten'), ('1', '1st Grade'), ('2', '2nd Grade'), ('3', '3rd Grade'), ('4', '4th Grade'), ('5', '5th Grade'), ('6', '6th Grade'), ('7', '7th Grade'), ('8', '8th Grade'), ('9', '9th Grade'), ('10', '10th Grade'), ('11', '11th Grade'), ('12', '12th Grade'), ('college', 'College Level'), ('adult', 'Adult Education')], max_length=10)),
                ('description', models.TextField(blank=True)),
                ('max_students', models.PositiveIntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='schools.school')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taught_classes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'School Class',
                'verbose_name_plural': 'School Classes',
                'db_table': 'school_classes',
                'ordering': ['school', 'grade_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('class_performance', 'Class Performance'), ('student_progress', 'Student Progress'), ('teacher_activity', 'Teacher Activity'), ('assignment_summary', 'Assignment Summary'), ('custom', 'Custom Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('data', models.JSONField(default=dict)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='schools.school')),
                ('school_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.schoolclass')),
            ],
            options={
                'verbose_name': 'School Report',
                'verbose_name_plural': 'School Reports',
                'db_table': 'school_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SchoolMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('admin', 'Administrator')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='schools.school')),
                ('school_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='memberships', to='schools.schoolclass')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'School Membership',
                'verbose_name_plural': 'School Memberships',
                'db_table': 'school_memberships',
            },
        ),
    ]
