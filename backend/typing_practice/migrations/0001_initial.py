# Generated by Django 4.2.7 on 2025-09-26 22:48

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TypingLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('order', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('instructions', models.TextField(blank=True)),
                ('focus_keys', models.CharField(help_text="Keys to focus on (e.g., 'asdf', 'jkl;')", max_length=100)),
                ('target_wpm', models.PositiveIntegerField(default=20)),
                ('target_accuracy', models.PositiveIntegerField(default=90)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_lessons', to=settings.AUTH_USER_MODEL)),
                ('prerequisite_lessons', models.ManyToManyField(blank=True, to='typing_practice.typinglesson')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
            options={
                'verbose_name': 'Typing Lesson',
                'verbose_name_plural': 'Typing Lessons',
                'db_table': 'typing_lessons',
                'ordering': ['difficulty', 'order'],
                'unique_together': {('difficulty', 'order')},
            },
        ),
        migrations.CreateModel(
            name='TypingText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('category', models.CharField(choices=[('lesson', 'Lesson'), ('practice', 'Practice'), ('quote', 'Quote'), ('poem', 'Poem'), ('news', 'News Article'), ('story', 'Story'), ('technical', 'Technical'), ('custom', 'Custom')], default='lesson', max_length=20)),
                ('word_count', models.PositiveIntegerField()),
                ('character_count', models.PositiveIntegerField()),
                ('estimated_time', models.PositiveIntegerField(help_text='Estimated time in minutes')),
                ('author', models.CharField(blank=True, max_length=100)),
                ('source', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_texts', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
            options={
                'verbose_name': 'Typing Text',
                'verbose_name_plural': 'Typing Texts',
                'db_table': 'typing_texts',
                'ordering': ['difficulty', 'title'],
            },
        ),
        migrations.CreateModel(
            name='TypingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('lesson', 'Lesson'), ('practice', 'Practice'), ('test', 'Test'), ('challenge', 'Challenge'), ('voice', 'Voice Typing')], default='practice', max_length=20)),
                ('words_per_minute', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('words_typed', models.PositiveIntegerField()),
                ('characters_typed', models.PositiveIntegerField()),
                ('errors_made', models.PositiveIntegerField()),
                ('time_taken', models.DurationField()),
                ('correct_characters', models.PositiveIntegerField()),
                ('incorrect_characters', models.PositiveIntegerField()),
                ('backspaces_used', models.PositiveIntegerField(default=0)),
                ('pauses_count', models.PositiveIntegerField(default=0)),
                ('average_pause_duration', models.DurationField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField()),
                ('is_completed', models.BooleanField(default=True)),
                ('is_practice_mode', models.BooleanField(default=True)),
                ('voice_accuracy', models.FloatField(blank=True, null=True)),
                ('pronunciation_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('typing_text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='typing_practice.typingtext')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='typing_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Typing Session',
                'verbose_name_plural': 'Typing Sessions',
                'db_table': 'typing_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TypingChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('challenge_type', models.CharField(choices=[('speed', 'Speed Challenge'), ('accuracy', 'Accuracy Challenge'), ('endurance', 'Endurance Challenge'), ('custom', 'Custom Challenge')], max_length=20)),
                ('duration_minutes', models.PositiveIntegerField()),
                ('target_wpm', models.PositiveIntegerField(blank=True, null=True)),
                ('target_accuracy', models.PositiveIntegerField(blank=True, null=True)),
                ('min_participants', models.PositiveIntegerField(default=1)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('points_reward', models.PositiveIntegerField(default=0)),
                ('badge_reward', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_challenges', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
            options={
                'verbose_name': 'Typing Challenge',
                'verbose_name_plural': 'Typing Challenges',
                'db_table': 'typing_challenges',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserLessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('mastered', 'Mastered')], default='not_started', max_length=20)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('best_wpm', models.FloatField(default=0.0)),
                ('best_accuracy', models.FloatField(default=0.0)),
                ('time_spent', models.DurationField(default=datetime.timedelta(0))),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_attempted', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='typing_practice.typinglesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Lesson Progress',
                'verbose_name_plural': 'User Lesson Progress',
                'db_table': 'user_lesson_progress',
                'unique_together': {('user', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='LessonText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('is_required', models.BooleanField(default=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='typing_practice.typinglesson')),
                ('typing_text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='typing_practice.typingtext')),
            ],
            options={
                'verbose_name': 'Lesson Text',
                'verbose_name_plural': 'Lesson Texts',
                'db_table': 'lesson_texts',
                'ordering': ['lesson', 'order'],
                'unique_together': {('lesson', 'order')},
            },
        ),
        migrations.CreateModel(
            name='ChallengeParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_wpm', models.FloatField(default=0.0)),
                ('best_accuracy', models.FloatField(default=0.0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_time', models.DurationField(default=datetime.timedelta(0))),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='typing_practice.typingchallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Challenge Participation',
                'verbose_name_plural': 'Challenge Participations',
                'db_table': 'challenge_participations',
                'unique_together': {('user', 'challenge')},
            },
        ),
    ]
